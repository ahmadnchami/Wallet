@model Wallet.Models.TransactionViewModels.TransactionViewModelList

@{
    ViewData["Title"] = "Transactions";
}

<style>
    .table-container {
        margin: 10px;
    }

    .table-container-header {
        overflow: hidden;
        width: 100%;
    }

    .table-container-body {
        height: 400px;
        overflow: auto;
        width: 100%;
    }

    .table-container-footer {
        overflow: hidden;
        width: 100%;
    }

    .table-container table {
        margin-bottom: 0px;
        table-layout: fixed;
    }

        .table-container table td,
        .table-container table th {
            overflow: hidden;
            white-space: nowrap;
            text-overflow: ellipsis;
        }


    /*.table-container-footer {
        margin-top: 1rem;
        margin-bottom: 1rem;
        padding-top: 5px;
        border: 0;
        border-top: 1px solid rgba(0, 0, 0, 0.1);
    }*/

@@media screen and (max-width: 767px) {
    form{
        display: none !important;
    }
 }
</style>

<div class="row margin-top-30">
    <div class="col-md-6">
        <a asp-action="Create" class="btn btn-outline-success btn-sm"><i class="fa fa-plus"></i>&nbsp;&nbsp;Add Transaction</a>
        <a asp-action="Map" class="btn btn-outline-primary btn-sm margin-left-10"><i class="fa fa-map"></i>&nbsp;&nbsp;View Map</a>

        @foreach (var item in ViewBag.Accounts)
        {
            @*<label class="custom-control custom-radio">
                    <input id="radio1" name="radio" type="radio" class="custom-control-input" checked>
                    <span class="custom-control-indicator"></span>
                    <span class="custom-control-description">@item.Bank <small>@item.AccountId</small></span>
                </label>*@
        }
    </div>
    <div class="col-md-6">
        <form name="transaction-form" onsubmit="updateFormAction(this)" class="form-inline pull-right">
            <select id="year-select" class="form-control-sm">
                <option value="0">Year</option>
                <option value="2017" selected>2017</option>
                <option value="2018">2018</option>
            </select>
            <select id="month-select" class="form-control-sm margin-left-05">
                <option value="0">Month</option>
                <option value="1">1</option>
                <option value="2">2</option>
                <option value="3">3</option>
                <option value="4">4</option>
                <option value="5">5</option>
                <option value="6">6</option>
                <option value="7">7</option>
                <option value="8">8</option>
                <option value="9">9</option>
                <option value="10">10</option>
                <option value="11">11</option>
                <option value="12">12</option>
            </select>
            <button type="submit" class="btn btn-primary btn-sm margin-left-10"><i class="fa fa-filter"></i>&nbsp;&nbsp;Filter</button>
            @if (Model.Filter.Active)
            {
                <a asp-action="/" class="btn btn-outline-success btn-sm margin-left-05"><i class="fa fa-times"></i>&nbsp;&nbsp;Clear</a>
            }
        </form>
    </div>
</div>
<div class="margin-top-30"></div>
<div class="transactions-table">
    <div class="table-container">
        <div class="table-container-header">
            <table class="table table-sm table-condensed">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.List.FirstOrDefault().Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.List.FirstOrDefault().Description)
                    </th>
                    <th class="text-center">
                        @Html.DisplayNameFor(model => model.List.FirstOrDefault().Amount)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.List.FirstOrDefault().DateTime)
                    </th>
                    @*<th>
                            @Html.DisplayNameFor(model => model.BankAccountId)
                        </th>*@
                    <th></th>
                </tr>
            </table>
        </div>
        <div class="table-container-body">
            <table class="table table-sm table-hover">
                <colgroup>
                    <col style="width: 20%;"></col>
                    <col style="width: 20%;"></col>
                    <col style="width: 10%;"></col>
                    <col style="width: 20%;"></col>
                    <col style="width: 30%;"></col>
                </colgroup>
                <tbody>
                    @foreach (var item in Model.List)
            {
                    <tr class="transaction-row">
                        <td>
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Description)
                        </td>
                        @{
                                String cls = item.IsCr ? "text-success" : "text-danger";
                            <td class="@cls text-center">
                                <strong>@Html.DisplayFor(modelItem => item.Amount)</strong>
                            </td>
                        }

                        <td>
                            @Html.DisplayFor(modelItem => item.DateTime)
                        </td>
                        <td class="transaction-action-cell">
                            <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-info">VIEW</a>
                            <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-warning">EDIT</a>
                            @*<a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-danger">DELETE</a>*@
                        </td>
                    </tr>
                                }
                </tbody>
            </table>
        </div>
        <div class="table-container-footer">
            <table class="table table-sm">
                <tfoot>
                    <tr>

                        <th></th>

                        <th>

                        </th>
                        <th>

                        </th>
                        <th class="text-right">
                            <strong>Totals:</strong>
                        </th>
                        <th class="">
                            <span class="alert-danger">
                                @*<strong>
                    Total Dr.
                </strong><br />*@
                                @Html.DisplayFor(modelItem => modelItem.TotalDr)
                            </span>&nbsp;&nbsp;
                            <span class="alert-success">
                                @*<strong>
                    Total Dr.
                </strong><br/>*@
                                @Html.DisplayFor(modelItem => modelItem.TotalCr)
                            </span>
                        </th>
                    </tr>
                </tfoot>
            </table>
        </div>
    </div>
</div>

<div class="transactions-list">
    <div class="list-group">
        @foreach (var item in Model.List)
        {
            String listGroupItemClass = item.IsCr ? "list-group-item-success" : "list-group-item-danger";

            <a asp-action="Details" asp-route-id="@item.Id" class="list-group-item list-group-item-action flex-column align-items-start">
                <div class="d-flex w-100 justify-content-between">
                    <h5 class="mb-1">@item.Name</h5>
                    <small>@item.DateTime</small>
                </div>
                <p class="mb-1">@item.Description</p>

                <small>@item.Amount.ToString("C", System.Globalization.CultureInfo.CurrentCulture)</small>
            </a>
        }
    </div>
</div>

@section Scripts{
    <script>
            /**
             * load filter if available
             */
            (function () {
                var filterActive = ("@Model.Filter.Active" === "True");
                if (filterActive) {
                    document.getElementById('year-select').value ="@Model.Filter.Year";
                    document.getElementById('month-select').value ="@Model.Filter.Month";
                }
             })();


        /**
         * update form action with filter
         * @@param frm
         */
        var updateFormAction = function (frm) {
            var yearSelect = document.getElementById('year-select');
            var year = yearSelect.options[yearSelect.selectedIndex].value;

            var monthSelect = document.getElementById('month-select');
            var month = monthSelect.options[monthSelect.selectedIndex].value;

            if (year == "0" || month == 0) {
                frm.action = "/transaction/";
                return;
            }

            frm.action = "/transaction/" + year + "/" + month;
        };

        var $body = $(".table-container-body"),
            $header = $(".table-container-header"),
            $footer = $(".table-container-footer");

        // Get ScrollBar width(From: http://bootstrap-table.wenzhixin.net.cn/)
        var scrollBarWidth = (function () {
            var inner = $('<p/>').addClass('fixed-table-scroll-inner'),
                outer = $('<div/>').addClass('fixed-table-scroll-outer'),
                w1, w2;
            outer.append(inner);
            $('body').append(outer);
            w1 = inner[0].offsetWidth;
            outer.css('overflow', 'scroll');
            w2 = inner[0].offsetWidth;
            if (w1 === w2) {
                w2 = outer[0].clientWidth;
            }
            outer.remove();
            return w1 - w2;
        })();

        // Scroll horizontal
        $body.on('scroll', function () {
            $header.scrollLeft($(this).scrollLeft());
            $footer.scrollLeft($(this).scrollLeft());
        });

        // Redraw Header/Footer
        var redraw = function () {
            var tds = $body.find("> table > tbody > tr:first-child > td");
            tds.each(function (i) {
                var width = $(this).innerWidth(),
                    lastPadding = (tds.length - 1 == i ? scrollBarWidth : 0);
                lastHeader = $header.find("th:eq(" + i + ")").innerWidth(width + lastPadding);
                lastFooter = $footer.find("th:eq(" + i + ")").innerWidth(width + lastPadding);
            });
        };

        // Selection
        $body.find("> table > tbody > tr > td").click(function (e) {
            $body.find("> table > tbody > tr").removeClass("info");
            $(e.target).parent().addClass('info');
        });

        // Listen to Resize Window
        $(window).resize(redraw);
        redraw();
    </script>
}
