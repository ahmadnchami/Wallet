@{
    ViewData["Title"] = "Wallet.com";
}

@using Microsoft.AspNetCore.Identity
@using Wallet.Models

@model IEnumerable<Wallet.Models.TransactionViewModels.TransactionViewModel>
@inject SignInManager<AppUser> SignInManager

@if (SignInManager.IsSignedIn(User))
{
    <div class="margin-top-30"></div>
    <div id="columnchart_material" style="width: 900px; height: 500px"></div>
}
else
{
    <div class="jumbotron">
        <div class="container">
            <h1 class="display-3">Hello, world!</h1>
            <p>This is a template for a simple marketing or informational website. It includes a large callout called a jumbotron and three supporting pieces of content. Use it as a starting point to create something more unique.</p>
            <p><a class="btn btn-primary" asp-controller="Account" asp-action="Login" role="button">Sign In »</a></p>
        </div>
    </div>
}

@section Scripts{

    <environment names="Development,Staging,Production">
        <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>

        <script type="text/javascript">
                var arr = new Array();
            @foreach (var item in Model)
            {
                @:arr.push({
                @:name: "@item.Name",
                @:description: "@item.Description",
                @:amount: "@item.Amount",
                @:isCr: "@item.IsCr",
                @:datetime: "@item.DateTime",
                @:yearMonth: "@String.Format("{0}-{1}", item.ParsedDateTime.Year, item.ParsedDateTime.Month)",
                @:lat: "@item.Latitude",
                @:lng: "@item.Longitude"
                @:});
            }

            google.charts.load('current', { 'packages': ['bar'] });
            google.charts.setOnLoadCallback(drawChart);

            function drawChart() {

                //var data = new google.visualization.DataTable();
                //data.addColumn('string', 'Month');
                //data.addColumn('number', 'Debit Transactions');

                var rows = {};
                arr.forEach((m, n) => {
                    var prop = m.yearMonth.toString();
                    var dr = m.isCr === "False";
                    var propExist = rows.hasOwnProperty(prop);
                    if (propExist) {
                        if (dr) {
                            rows[prop]["dr"] = parseFloat(rows[prop]["dr"]) + parseFloat(m.amount);
                        } else {
                            rows[prop]["cr"] = parseFloat(rows[prop]["cr"]) + parseFloat(m.amount);
                        }

                    } else {
                        var row = {};
                        rows[prop] = {
                            "dr": 0,
                            "cr": 0
                        };

                        if (dr) {
                            rows[prop]["dr"] = parseFloat(m.amount);
                        } else {
                            rows[prop]["cr"] = parseFloat(m.amount);
                        }
                    }
                });

                var keys = Object.keys(rows);
                var rs = [["Month", "Debit Transacions", "Credit Transactions"]];
                for (var i = 0; i < keys.length; i++) {
                    var key = keys[i];
                    rs.push([key, rows[key]["dr"], rows[key]["cr"]]);
                }

                var data = google.visualization.arrayToDataTable(rs);

                //data.addRows(rs);

                var options = {
                    chart: {
                        title: 'Debit transactions account number 4554455181',
                        subtitle: 'in dollars (USD)'
                    },
                    'chartArea': {
                        'backgroundColor': {
                            'fill': '#eeeeee'
                        },
                    },
                    width: 900,
                    height: 500,
                    backgroundColor: '#eeeeee'
                };

                var chart = new google.charts.Bar(document.getElementById('columnchart_material'));

                chart.draw(data, google.charts.Bar.convertOptions(options));
            }

        </script>
    </environment>
}
